SQL> declare
  2  f number:=1;
  3  n number:=&n;
  4  begin
  5  while n>0
  6  loop
  7  f:=n*f;
  8  n:=n-1;
  9  end loop;
 10  dbms_output.put_line('Factorial is '||f);
 11  end;
 12  /
Enter value for n: 4
old   3: n number:=&n;
new   3: n number:=4;
Factorial is 24

PL/SQL procedure successfully completed.


Enter value for a: 5
old   2: a number:=&a;
new   2: a number:=5;
Enter value for b: 7
old   3: b number:=&b;
new   3: b number:=7;
Enter value for c: 2
old   4: c number:=&c;
new   4: c number:=2;
Greatest number is 7

PL/SQL procedure successfully completed.


SQL> declare
  2 numone NUMBER := &numone;
  3 numtwo NUMBER := &numtwo;
  4 operator VARCHAR2(1) := '&operator';
  5 result NUMBER;
  6  BEGIN
  7 IF operator = '+' THEN
  8 result := numone + numtwo;
  9 DBMS_OUTPUT.PUT_LINE('result is ' || result);
 10 ELSIF operator = '-' THEN
 11 result := numone - numtwo;
 12 DBMS_OUTPUT.PUT_LINE('result is ' || result);
 13 ELSIF operator = '/' THEN
 14 IF numtwo != 0 THEN
 15 result := numone / numtwo;
 16 DBMS_OUTPUT.PUT_LINE('result is ' || result);
 17 ELSE
 18 DBMS_OUTPUT.PUT_LINE('Divide by zero error');
 19 END IF;
 20 ELSIF operator = '*' THEN
 21 result := numone * numtwo;
 22 DBMS_OUTPUT.PUT_LINE('result is ' || result);
 23 ELSE
 24 DBMS_OUTPUT.PUT_LINE('Unsupported operation');
 25 END IF;
 26* END;
SQL> /
Enter value for numone: 4
old   2:     numone NUMBER := &numone;
new   2:     numone NUMBER := 4;
Enter value for numtwo: 7
old   3:     numtwo NUMBER := &numtwo;
new   3:     numtwo NUMBER := 7;
Enter value for operator: +
old   4:     operator VARCHAR2(1) := '&operator';
new   4:     operator VARCHAR2(1) := '+';
result is 11

PL/SQL procedure successfully completed.

SQL> /
Enter value for numone: 4
old   2:     numone NUMBER := &numone;
new   2:     numone NUMBER := 4;
Enter value for numtwo: 7
old   3:     numtwo NUMBER := &numtwo;
new   3:     numtwo NUMBER := 7;
Enter value for operator: +
old   4:     operator VARCHAR2(1) := '&operator';
new   4:     operator VARCHAR2(1) := '+';
result is 11

PL/SQL procedure successfully completed.

SQL> /
Enter value for numone: 5
old   2:     numone NUMBER := &numone;
new   2:     numone NUMBER := 5;
Enter value for numtwo: 0
old   3:     numtwo NUMBER := &numtwo;
new   3:     numtwo NUMBER := 0;
Enter value for operator: /
old   4:     operator VARCHAR2(1) := '&operator';
new   4:     operator VARCHAR2(1) := '/';
Divide by zero error

PL/SQL procedure successfully completed.


SQL>declare
  2  num_terms NUMBER := &num_terms;
  3  first_term NUMBER := 0;
  4  second_term NUMBER := 1;
  5  next_term NUMBER;
  6  BEGIN
  7  DBMS_OUTPUT.PUT_LINE('Fibonacci Series:');
  8  IF num_terms < 1 THEN
  9  DBMS_OUTPUT.PUT_LINE('Please enter a positive integer.');
 10  ELSIF num_terms = 1 THEN
 11  DBMS_OUTPUT.PUT_LINE(first_term);
 12  ELSE
 13  DBMS_OUTPUT.PUT_LINE(first_term);
 14  DBMS_OUTPUT.PUT_LINE(second_term);
 15  FOR i IN 3..num_terms LOOP
 16  next_term := first_term + second_term;
 17  DBMS_OUTPUT.PUT_LINE(next_term);
 18  first_term := second_term;
 19  second_term := next_term;
 20  END LOOP;
 21  END IF;
 22* END;
SQL> /

Enter value for num_terms: 28
old   2: num_terms NUMBER := &num_terms;
new   2: num_terms NUMBER := 28;
Fibonacci Series:
0
1
1
2
3
5
8
13
21
34
55
89
144
233
377
610
987
1597
2584
4181
6765
10946
17711
28657
46368
75025
121393
196418

PL/SQL procedure successfully completed.
